;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28/02/2024 17:16:18
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFBE  	GOTO        380
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x001C	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x001E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x0020	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0022	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x0024	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0026	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0028	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x002A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x002C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x002E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0030	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0032	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0034	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0036	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0038	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x003A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x003C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x003E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0040	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0042	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0044	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0046	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0048	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x004A	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x004C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x004E	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x0050	0x0012      	RETURN      0
; end of _Div_16X16_U
_mostrar_digito:
;Practica2b.c,33 :: 		void mostrar_digito(unsigned char digito, unsigned char posicion){
;Practica2b.c,36 :: 		switch(posicion){
0x0052	0xD00C      	BRA         L_mostrar_digito0
;Practica2b.c,37 :: 		case 0: PORTD = 0b00001110; break;
L_mostrar_digito2:
0x0054	0x0E0E      	MOVLW       14
0x0056	0x6E83      	MOVWF       PORTD 
0x0058	0xD015      	BRA         L_mostrar_digito1
;Practica2b.c,38 :: 		case 1: PORTD = 0b00001101; break;
L_mostrar_digito3:
0x005A	0x0E0D      	MOVLW       13
0x005C	0x6E83      	MOVWF       PORTD 
0x005E	0xD012      	BRA         L_mostrar_digito1
;Practica2b.c,39 :: 		case 2: PORTD = 0b00001011; break;
L_mostrar_digito4:
0x0060	0x0E0B      	MOVLW       11
0x0062	0x6E83      	MOVWF       PORTD 
0x0064	0xD00F      	BRA         L_mostrar_digito1
;Practica2b.c,40 :: 		case 3: PORTD = 0b00000111; break;
L_mostrar_digito5:
0x0066	0x0E07      	MOVLW       7
0x0068	0x6E83      	MOVWF       PORTD 
0x006A	0xD00C      	BRA         L_mostrar_digito1
;Practica2b.c,43 :: 		}
L_mostrar_digito0:
0x006C	0x501C      	MOVF        FARG_mostrar_digito_posicion, 0 
0x006E	0x0A00      	XORLW       0
0x0070	0xE0F1      	BZ          L_mostrar_digito2
0x0072	0x501C      	MOVF        FARG_mostrar_digito_posicion, 0 
0x0074	0x0A01      	XORLW       1
0x0076	0xE0F1      	BZ          L_mostrar_digito3
0x0078	0x501C      	MOVF        FARG_mostrar_digito_posicion, 0 
0x007A	0x0A02      	XORLW       2
0x007C	0xE0F1      	BZ          L_mostrar_digito4
0x007E	0x501C      	MOVF        FARG_mostrar_digito_posicion, 0 
0x0080	0x0A03      	XORLW       3
0x0082	0xE0F1      	BZ          L_mostrar_digito5
L_mostrar_digito1:
;Practica2b.c,44 :: 		PORTC = codigos_display[digito];
0x0084	0x0EDE      	MOVLW       _codigos_display
0x0086	0x241B      	ADDWF       FARG_mostrar_digito_digito, 0 
0x0088	0x6EF6      	MOVWF       TBLPTR 
0x008A	0x0E01      	MOVLW       hi_addr(_codigos_display)
0x008C	0x6EF7      	MOVWF       TBLPTR+1 
0x008E	0x0E00      	MOVLW       0
0x0090	0x22F7      	ADDWFC      TBLPTR+1, 1 
0x0092	0x0E00      	MOVLW       higher_addr(_codigos_display)
0x0094	0x6EF8      	MOVWF       TBLPTR+2 
0x0096	0x0E00      	MOVLW       0
0x0098	0x22F8      	ADDWFC      TBLPTR+2, 1 
0x009A	0x0009      	TBLRD*+
0x009C	0xFF82CFF5  	MOVFF       TABLAT, PORTC
;Practica2b.c,45 :: 		}
L_end_mostrar_digito:
0x00A0	0x0012      	RETURN      0
; end of _mostrar_digito
_decimal_a_digitos:
;Practica2b.c,20 :: 		void decimal_a_digitos(unsigned int numero, unsigned char *digitos){
;Practica2b.c,21 :: 		digitos[0] = numero / 1000;
0x00A2	0x0EE8      	MOVLW       232
0x00A4	0x6E04      	MOVWF       R4 
0x00A6	0x0E03      	MOVLW       3
0x00A8	0x6E05      	MOVWF       R5 
0x00AA	0xF000C01B  	MOVFF       FARG_decimal_a_digitos_numero, R0
0x00AE	0xF001C01C  	MOVFF       FARG_decimal_a_digitos_numero+1, R1
0x00B2	0xDFB4      	RCALL       _Div_16X16_U
0x00B4	0xFFE1C01D  	MOVFF       FARG_decimal_a_digitos_digitos, FSR1L
0x00B8	0xFFE2C01E  	MOVFF       FARG_decimal_a_digitos_digitos+1, FSR1H
0x00BC	0xFFE6C000  	MOVFF       R0, POSTINC1
;Practica2b.c,22 :: 		numero %= 1000;
0x00C0	0x0EE8      	MOVLW       232
0x00C2	0x6E04      	MOVWF       R4 
0x00C4	0x0E03      	MOVLW       3
0x00C6	0x6E05      	MOVWF       R5 
0x00C8	0xF000C01B  	MOVFF       FARG_decimal_a_digitos_numero, R0
0x00CC	0xF001C01C  	MOVFF       FARG_decimal_a_digitos_numero+1, R1
0x00D0	0xDFA5      	RCALL       _Div_16X16_U
0x00D2	0xF000C008  	MOVFF       R8, R0
0x00D6	0xF001C009  	MOVFF       R9, R1
0x00DA	0xF01BC000  	MOVFF       R0, FARG_decimal_a_digitos_numero
0x00DE	0xF01CC001  	MOVFF       R1, FARG_decimal_a_digitos_numero+1
;Practica2b.c,24 :: 		digitos[1] = numero / 100;
0x00E2	0x0E01      	MOVLW       1
0x00E4	0x241D      	ADDWF       FARG_decimal_a_digitos_digitos, 0 
0x00E6	0x6E1F      	MOVWF       FLOC__decimal_a_digitos 
0x00E8	0x0E00      	MOVLW       0
0x00EA	0x201E      	ADDWFC      FARG_decimal_a_digitos_digitos+1, 0 
0x00EC	0x6E20      	MOVWF       FLOC__decimal_a_digitos+1 
0x00EE	0x0E64      	MOVLW       100
0x00F0	0x6E04      	MOVWF       R4 
0x00F2	0x0E00      	MOVLW       0
0x00F4	0x6E05      	MOVWF       R5 
0x00F6	0xDF92      	RCALL       _Div_16X16_U
0x00F8	0xFFE1C01F  	MOVFF       FLOC__decimal_a_digitos, FSR1L
0x00FC	0xFFE2C020  	MOVFF       FLOC__decimal_a_digitos+1, FSR1H
0x0100	0xFFE6C000  	MOVFF       R0, POSTINC1
;Practica2b.c,25 :: 		numero %= 100;
0x0104	0x0E64      	MOVLW       100
0x0106	0x6E04      	MOVWF       R4 
0x0108	0x0E00      	MOVLW       0
0x010A	0x6E05      	MOVWF       R5 
0x010C	0xF000C01B  	MOVFF       FARG_decimal_a_digitos_numero, R0
0x0110	0xF001C01C  	MOVFF       FARG_decimal_a_digitos_numero+1, R1
0x0114	0xDF83      	RCALL       _Div_16X16_U
0x0116	0xF000C008  	MOVFF       R8, R0
0x011A	0xF001C009  	MOVFF       R9, R1
0x011E	0xF01BC000  	MOVFF       R0, FARG_decimal_a_digitos_numero
0x0122	0xF01CC001  	MOVFF       R1, FARG_decimal_a_digitos_numero+1
;Practica2b.c,27 :: 		digitos[2] = numero / 10;
0x0126	0x0E02      	MOVLW       2
0x0128	0x241D      	ADDWF       FARG_decimal_a_digitos_digitos, 0 
0x012A	0x6E1F      	MOVWF       FLOC__decimal_a_digitos 
0x012C	0x0E00      	MOVLW       0
0x012E	0x201E      	ADDWFC      FARG_decimal_a_digitos_digitos+1, 0 
0x0130	0x6E20      	MOVWF       FLOC__decimal_a_digitos+1 
0x0132	0x0E0A      	MOVLW       10
0x0134	0x6E04      	MOVWF       R4 
0x0136	0x0E00      	MOVLW       0
0x0138	0x6E05      	MOVWF       R5 
0x013A	0xDF70      	RCALL       _Div_16X16_U
0x013C	0xFFE1C01F  	MOVFF       FLOC__decimal_a_digitos, FSR1L
0x0140	0xFFE2C020  	MOVFF       FLOC__decimal_a_digitos+1, FSR1H
0x0144	0xFFE6C000  	MOVFF       R0, POSTINC1
;Practica2b.c,29 :: 		digitos[3] = numero % 10;
0x0148	0x0E03      	MOVLW       3
0x014A	0x241D      	ADDWF       FARG_decimal_a_digitos_digitos, 0 
0x014C	0x6E1F      	MOVWF       FLOC__decimal_a_digitos 
0x014E	0x0E00      	MOVLW       0
0x0150	0x201E      	ADDWFC      FARG_decimal_a_digitos_digitos+1, 0 
0x0152	0x6E20      	MOVWF       FLOC__decimal_a_digitos+1 
0x0154	0x0E0A      	MOVLW       10
0x0156	0x6E04      	MOVWF       R4 
0x0158	0x0E00      	MOVLW       0
0x015A	0x6E05      	MOVWF       R5 
0x015C	0xF000C01B  	MOVFF       FARG_decimal_a_digitos_numero, R0
0x0160	0xF001C01C  	MOVFF       FARG_decimal_a_digitos_numero+1, R1
0x0164	0xDF5B      	RCALL       _Div_16X16_U
0x0166	0xF000C008  	MOVFF       R8, R0
0x016A	0xF001C009  	MOVFF       R9, R1
0x016E	0xFFE1C01F  	MOVFF       FLOC__decimal_a_digitos, FSR1L
0x0172	0xFFE2C020  	MOVFF       FLOC__decimal_a_digitos+1, FSR1H
0x0176	0xFFE6C000  	MOVFF       R0, POSTINC1
;Practica2b.c,30 :: 		}
L_end_decimal_a_digitos:
0x017A	0x0012      	RETURN      0
; end of _decimal_a_digitos
_main:
;Practica2b.c,48 :: 		void main() {
;Practica2b.c,50 :: 		ADCON1 = 0x7;
0x017C	0x0E07      	MOVLW       7
0x017E	0x6EC1      	MOVWF       ADCON1 
;Practica2b.c,52 :: 		TRISB = 1;
0x0180	0x0E01      	MOVLW       1
0x0182	0x6E93      	MOVWF       TRISB 
;Practica2b.c,54 :: 		TRISC = 0;
0x0184	0x6A94      	CLRF        TRISC 
;Practica2b.c,55 :: 		TRISD = 0;
0x0186	0x6A95      	CLRF        TRISD 
;Practica2b.c,57 :: 		PORTC = 0;
0x0188	0x6A82      	CLRF        PORTC 
;Practica2b.c,58 :: 		PORTD = 0b00001110;
0x018A	0x0E0E      	MOVLW       14
0x018C	0x6E83      	MOVWF       PORTD 
;Practica2b.c,60 :: 		while(1){
L_main6:
;Practica2b.c,62 :: 		valor_puertoB = PORTB;
0x018E	0xF019CF81  	MOVFF       PORTB, _valor_puertoB
;Practica2b.c,64 :: 		decimal_a_digitos(valor_puertoB, digitos);
0x0192	0xF01BC019  	MOVFF       _valor_puertoB, FARG_decimal_a_digitos_numero
0x0196	0x0E00      	MOVLW       0
0x0198	0x6E1C      	MOVWF       FARG_decimal_a_digitos_numero+1 
0x019A	0x0E15      	MOVLW       _digitos
0x019C	0x6E1D      	MOVWF       FARG_decimal_a_digitos_digitos 
0x019E	0x0E00      	MOVLW       hi_addr(_digitos)
0x01A0	0x6E1E      	MOVWF       FARG_decimal_a_digitos_digitos+1 
0x01A2	0xDF7F      	RCALL       _decimal_a_digitos
;Practica2b.c,66 :: 		for(i = 0; i < 4; i++){
0x01A4	0x6A1A      	CLRF        _i 
L_main8:
0x01A6	0x0E04      	MOVLW       4
0x01A8	0x5C1A      	SUBWF       _i, 0 
0x01AA	0xE217      	BC          L_main9
;Practica2b.c,67 :: 		mostrar_digito(digitos[i], i);
0x01AC	0x0E15      	MOVLW       _digitos
0x01AE	0x6EE9      	MOVWF       FSR0L 
0x01B0	0x0E00      	MOVLW       hi_addr(_digitos)
0x01B2	0x6EEA      	MOVWF       FSR0L+1 
0x01B4	0x501A      	MOVF        _i, 0 
0x01B6	0x26E9      	ADDWF       FSR0L, 1 
0x01B8	0xB0D8      	BTFSC       STATUS, 0 
0x01BA	0x2AEA      	INCF        FSR0L+1, 1 
0x01BC	0xF01BCFEE  	MOVFF       POSTINC0, FARG_mostrar_digito_digito
0x01C0	0xF01CC01A  	MOVFF       _i, FARG_mostrar_digito_posicion
0x01C4	0xDF46      	RCALL       _mostrar_digito
;Practica2b.c,68 :: 		delay_ms(15);
0x01C6	0x0E27      	MOVLW       39
0x01C8	0x6E0C      	MOVWF       R12, 0
0x01CA	0x0EF5      	MOVLW       245
0x01CC	0x6E0D      	MOVWF       R13, 0
L_main11:
0x01CE	0x2E0D      	DECFSZ      R13, 1, 0
0x01D0	0xD7FE      	BRA         L_main11
0x01D2	0x2E0C      	DECFSZ      R12, 1, 0
0x01D4	0xD7FC      	BRA         L_main11
;Practica2b.c,66 :: 		for(i = 0; i < 4; i++){
0x01D6	0x2A1A      	INCF        _i, 1 
;Practica2b.c,71 :: 		}
0x01D8	0xD7E6      	BRA         L_main8
L_main9:
;Practica2b.c,74 :: 		}
0x01DA	0xD7D9      	BRA         L_main6
;Practica2b.c,79 :: 		}
L_end_main:
0x01DC	0xD7FF      	BRA         $+0
; end of _main
;Practica2b.c,5 :: _codigos_display
0x01DE	0x063F ;_codigos_display+0
0x01E0	0x4F5B ;_codigos_display+2
0x01E2	0x6D66 ;_codigos_display+4
0x01E4	0x077D ;_codigos_display+6
0x01E6	0x6F7F ;_codigos_display+8
; end of _codigos_display
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [54]    _Div_16X16_U
0x0052      [80]    _mostrar_digito
0x00A2     [218]    _decimal_a_digitos
0x017C      [98]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [4]    _digitos
0x0019       [1]    _valor_puertoB
0x001A       [1]    _i
0x001B       [2]    FARG_decimal_a_digitos_numero
0x001B       [1]    FARG_mostrar_digito_digito
0x001C       [1]    FARG_mostrar_digito_posicion
0x001D       [2]    FARG_decimal_a_digitos_digitos
0x001F       [2]    FLOC__decimal_a_digitos
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01DE      [10]    _codigos_display
